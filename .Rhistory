yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
spawn.swarm <- function(dataFrame) {
for(var in dataFrame$coordinates) {
theX  <- var[1]
theY <- var[2]
temp <- place.Individual(theX, theY, arenaSim)
arenaSim <<- temp
}
}
arenaSim
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
spawn.swarm <- function(dataFrame) {
for(var in dataFrame$coordinates) {
theX  <- var[1]
theY <- var[2]
temp <- place.Individual(theX, theY, arenaSim)
arenaSim <<- temp
}
}
arenaSim
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$coordinates[var] <- c(temp.swarm.Data$yPosition[var],temp.swarm.Data$xPosition[var])
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
View(swarm.Data)
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
spawn.swarm <- function(dataFrame, currentArena) {
temp <- currentArena
count <- 1
for(var in dataFrame$xPosition) {
theY <- dataFrame$yPosition[count]
temp <- place.Individual(var, theY, temp)
count <- count + 1
}
return(temp)
}
arena.Sim <- spawn.swarm(swarm.Data, arena.Sim)
arena.Sim <- spawn.swarm(swarm.Data, arenaSim)
arenaSim <- place.Individual(100,100, arenaSim)
arenaSim
arenaSim <- arenaSim + geom_point(aes(200, 200))
arenaSim
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
assign.location.value <- function(center, currentLocation, distribution.type) {
rowDiff <- abs(center[1] - currentLocation[1])
columnDiff <- abs(center[2] - currentLocation[2])
totalDifference <- rowDiff + columnDiff
scaledDifference <- 1 - (distribution.type(totalDifference)/distribution.type(center[1] * 2))
return(scaledDifference)
}
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
arenaSim <- arenaSim + geom_point(aes(200, 200))
arenaSim
count <- 1
for(ind in nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
arenaSim <- arenaSim + geom_point(aes(coor[1], coor[2]))
count <- count + 1
}
arenaSim
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
place.Individual <- function(givenX, givenY, arena) {
tempArena <- arena + geom_point(aes(givenX, givenY))
return(tempArena)
}
count <- 1
for(ind in nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
arenaSim <- arenaSim + geom_point(aes(coor[1], coor[2]))
count <- count + 1
}
arenaSim
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
arenaSim <- arenaSim + geom_point(aes(coor[1], coor[2]))
count <- count + 1
}
arenaSim
library(ggplot2)
xVal <- 1000
yVal <- 1000
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
arenaSim <- arenaSim + geom_point(aes(coor[1], coor[2]))
count <- count + 1
}
arenaSim
View(swarm.Data)
print coor
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
print(coor)
arenaSim <- arenaSim + geom_point(aes(coor[1], coor[2]))
count <- count + 1
}
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
print(coor)
arenaSim <- arenaSim + geom_point(aes(coor))
count <- count + 1
}
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
print(coor)
arenaSim <- arenaSim + geom_point(aes(coor))
count <- count + 1
}
arenaSim
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
print(coor)
arenaSim <- arenaSim + geom_point(aes(coor[1],coor[2]))
count <- count + 1
}
arenaSim
count <- 1
for(ind in 1:nIndividuals) {
coor <- c(swarm.Data$xPosition[count], swarm.Data$yPosition[count])
print(coor)
arenaSim <- arenaSim + geom_point(aes(x = coor[1],y = coor[2]))
count <- count + 1
}
arenaSim
arenaSim <- arenaSim + geom_point(aes(swarm.Data$xPosition,swarm.Data$yPosition))
arenaSim
swarm.Data$xPosition
swarm.Data <- initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
arenaSim <- arenaSim + geom_point(aes(x=swarm.Data$xPosition,y =swarm.Data$yPosition))
arenaSim
arenaSim <- arenaSim + geom_point(aes(x=c(swarm.Data$xPosition),y =c(swarm.Data$yPosition)))
arenaSim
arenaSim <- arenaSim + geom_point(aes(swarm.Data$xPosition))
arenaSim
IES:
library(ggplot2)
# ARENA PARAMETERS:
xVal <- 1000.0
yVal <- 1000.0
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
# GENERATING AN ARENA
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <<- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
# INITIALIZE THE SWARM POPULATION
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
temp.swarm.Data <- data.frame(
index = c(1:nIndividuals),
swarm.cohesion = rep(swarmCohesion,nIndividuals),
swarm.avoidance = rep(swarmAvoidance,nIndividuals),
xPosition = rep(NA, xVal),
yPosition = rep(NA, yVal),
theta = rep(NA, xVal)
)
for(var in 1:xVal) {
temp.swarm.Data$xPosition[var] <- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
temp.swarm.Data$yPosition[var] <- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
temp.swarm.Data$theta[var] <- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
return(temp.swarm.Data)
}
# Save initialized swarm
arena.Data <- arena.Data + initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
arenaSim <- arenaSim + geom_point(aes(arena.Data$xPosition, arena.Data$yPosition))
library(ggplot2)
xVal <- 1000.0
yVal <- 1000.0
nIndividuals <- 100
swarmCohesion <- 0.5
swarmAvoidance <- 0.5
create.arena <- function(xLength, yLength) {
xLimit <- xLength
yLimit <- yLength
arena.Data <<- data.frame(
yWall = rep(1,yLimit),
xWall = c(1:xLimit),
xNorthWall = c(1:xLimit),
yNorthWall = rep(yLimit,yLimit)
)
arena <- ggplot(data = arena.Data, aes(x=xWall,y=yWall))
# Arena Borders
arena <- arena + geom_point() +  ylim(1,yLimit) + xlim(1,xLimit) + geom_point(aes(xNorthWall,yNorthWall)) + geom_point(aes(rep(1,xLimit),c(1:yLimit))) + geom_point(aes(rep(xLimit,xLimit),c(1:yLimit)))
return(arena)
}
arenaSim <- create.arena(xVal, yVal)
arenaSim
initialize.swarm <- function(cohesion, avoidance, spatial.distribution.factor, theta.distribution.factor ,coordinateLocation) {
arena.Data$index <<- c(1:nIndividuals)
arena.Data$swarm.cohesion <<- rep(swarmCohesion,nIndividuals)
arena.Data$swarm.avoidance <<- rep(swarmAvoidance,nIndividuals)
arena.Data$xPosition <<- rep(NA, xVal)
arena.Data$yPosition <<- rep(NA, yVal)
arena.Data$theta <<- rep(NA, xVal)
for(var in 1:xVal) {
arena.Data$xPosition[var] <<- rnorm(1, mean = coordinateLocation[1], sd= spatial.distribution.factor + 50)
arena.Data$yPosition[var] <<- rnorm(1, mean = coordinateLocation[2], sd= spatial.distribution.factor + 50)
arena.Data$theta[var] <<- rnorm(1, mean = 180, sd= theta.distribution.factor + 5)
}
}
View(arena.Data)
initialize.swarm(swarmCohesion, swarmAvoidance, 50, 5, c(500,500))
View(arena.Data)
arenaSim <- arenaSim + geom_point(aes(arena.Data$xPosition, arena.Data$yPosition))
arenaSim
